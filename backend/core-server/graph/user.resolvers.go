package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.42

import (
	"context"
	"fmt"

	"github.com/SohamRatnaparkhi/git-store/backend/core-server/graph/model"
)

// RegisterUser is the resolver for the registerUser field.
func (r *mutationResolver) RegisterUser(ctx context.Context, input model.RegisterUserInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: RegisterUser - registerUser"))
}

// RegisterUserOAuth is the resolver for the registerUserOAuth field.
func (r *mutationResolver) RegisterUserOAuth(ctx context.Context, input model.RegisterUserOAuthInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: RegisterUserOAuth - registerUserOAuth"))
}

// LoginUser is the resolver for the loginUser field.
func (r *mutationResolver) LoginUser(ctx context.Context, input model.LoginUserInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: LoginUser - loginUser"))
}

// LoginUserOAuth is the resolver for the loginUserOAuth field.
func (r *mutationResolver) LoginUserOAuth(ctx context.Context, input model.LoginUserOAuthInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: LoginUserOAuth - loginUserOAuth"))
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, input model.UpdateUserInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: UpdateUser - updateUser"))
}

// DeleteUser is the resolver for the deleteUser field.
func (r *mutationResolver) DeleteUser(ctx context.Context, userID string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: DeleteUser - deleteUser"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, userID string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// LoginUser is the resolver for the loginUser field.
func (r *queryResolver) LoginUser(ctx context.Context, input model.LoginUserInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: LoginUser - loginUser"))
}
